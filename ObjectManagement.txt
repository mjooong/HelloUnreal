언리얼 오브젝트 관리 1 - 직렬화
Unreal Object Management 1 - Serialization

언리얼 엔진이 제공하는 직렬화 기능 이해
언리얼 오브젝트의 데이터 저장하고 불러들이는 방법 이해


직렬화(Serialization)란?
오브젝트나 연결된 오브젝트의 묶음(오브젝트 그래프)을 바이트 스트림으로 변환하는 과정
	. 복잡한 데이터를 일렬로 세우기 때문에 직렬화

거꾸로 복구시키는 과정도 포함해서 의미
	. 시리얼라이제이션(Serializtion) : 오브젝트 그래프에서 바이트 스트림으로
	. 디시리얼라이제이션(Deserialization) : 바이트 스트림에서 오브젝트 그래프로

직렬화가 가지는 장점
	. 현재 프로그램의 상태를 저장하고 필요한 때 복원할 수 있다 (게임의 저장)
	. 현재 객체의 정보를 클립보드에 복사해서 다른 프로그램에 전송 가능
	. 네트워크를 통해 현재 프로그램의 상태를 다른 컴퓨터에 복원 가능 (멀티플레이어 게임)
	. 데이터 압축, 암호화를 통해 데이터를 효율적이고 안전하게 보관 가능

오브젝트 그래프 <----Byte Stream----> 오브젝트 그래프



직렬화 구현시 고려할 점
. 데이터 레이아웃 : 오브젝트가 소유한 다양한 데이터를 변환할 것인가
. 이식성 : 서로 다른 시스템에 전송해도 이식될 수 있는가
. 버전 관리 : 새로운 기능이 추가될 때 이를 어떻게 확장하고 처리할 것인가
. 성능 : 네트웍 비용을 줄이기 위해 어떤 데이터 형식을 사용할 것인가
. 보안 : 데이터를 어떻게 안전하게 보호할 것인가
. 에러 처리 : 전송 과정에서 문제가 발생할 경우 이를 어떻게 인식하고 처리할 것인가

이러한 상황을 모두 감안해 직렬화 모델을 만드는것은 쉬운 일이 아님


언리얼 직렬화 시스템
. 언리얼 엔진은 이러한 상황을 모두 고려한 직렬화 시스템을 자체적으로 제공하고 있음
. 직렬화 시스템을 위해 제공하는 클래스 FArchive와 연산자
	. 아카이브 클래스 (FArchive)
	. Shift(<<)operator
. 다양한 아카이브 클래스 제공
	. 메모리 아카이브 (FMemoryReader, FMemoryWriter)
	. 파일 아카이브 (FArchiveFileReaderGeneric, FArchiveFileWriterGeneric)
	. 기타 언리얼 오브젝트와 관련된 아카이브 클래스 (FArchiveUObject)
. Json 직렬화 기능 : 별도의 라이브러리를 통해 제공하고 있음


Json 직렬화













































